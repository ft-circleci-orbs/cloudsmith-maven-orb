version: 2.1
orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.1
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  cloudsmith-maven: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:

  test-set_env_vars_for_maven:
    docker:
      - image: cimg/openjdk:21.0.2
    resource_class: small
    steps:
      - checkout
      - cloudsmith-maven/set_env_vars_for_maven:
          repository: "circleci-orb-testing"
      - run:
          name: Check that maven environment variables have been set
          command: |
            if [ -z $CLOUDSMITH_MAVEN_REPOSITORY_URL ]
            then
              echo "Test failed: CLOUDSMITH_MAVEN_REPOSITORY_URL has not been set."
              exit 1
            fi
            if [ -z "$CLOUDSMITH_REPOSITORY" ]
            then
              echo "Unable to configure MAVEN. Env var CLOUDSMITH_REPOSITORY is not defined. Please run the set_env_vars_for_maven command first."
              exit 1
            fi
            if [ -z "$CLOUDSMITH_OIDC_TOKEN" ]
            then
              echo "Unable to configure MAVEN. Env var CLOUDSMITH_OIDC_TOKEN is not defined. Please run the set_env_vars_for_maven command first."
              exit 1
            fi
            echo "All tests passed."

  test-configure_maven_install_package:
    docker:
      - image: cimg/openjdk:21.0.2
    resource_class: small
    steps:
      - checkout
      - cloudsmith-maven/configure_maven:
          repository: "circleci-orb-testing"
      - run:
          name: Check that maven environment variables have been set
          command: |
            if [ -z $CLOUDSMITH_MAVEN_REPOSITORY_URL ]
            then
              echo "Test failed: CLOUDSMITH_MAVEN_REPOSITORY_URL has not been set."
              exit 1
            fi
            if [ -z "$CLOUDSMITH_REPOSITORY" ]
            then
              echo "Unable to configure MAVEN. Env var CLOUDSMITH_REPOSITORY is not defined. Please run the set_env_vars_for_maven command first."
              exit 1
            fi
            if [ -z "$CLOUDSMITH_MAVEN_TOKEN" ]
            then
              echo "Unable to configure MAVEN. Env var CLOUDSMITH_MAVEN_TOKEN is not defined. Please run the set_env_vars_for_maven command first."
              exit 1
            fi
            echo "All tests passed."
      - run:
          name: Install maven package dependencies
          command: mvn install
          working_directory: ~/project/.circleci/simple-maven-package-test/maven-package-test

  test-upload_package_using_cli:
    docker:
      - image: cimg/openjdk:21.0.2
    resource_class: small
    steps:
      - checkout
      - run:
          name: Build maven package
          command: mvn package
          working_directory: .circleci/simple-maven-package-test/maven-package-test
      - cloudsmith-maven/upload_package_using_cli:
          repository: "circleci-orb-testing"
          dist_dir: .circleci/simple-maven-package-test/maven-package-test

  test-upload_package_native:
    docker:
      - image: cimg/openjdk:21.0.2
    resource_class: small
    steps:
      - checkout
      - cloudsmith-maven/configure_maven:
          repository: "circleci-orb-testing"
          # cloudsmith_service_account: "circleci-orb-testing"
      - run:
          name: build and upload package to Cloudsmith
          command: mvn deploy
          working_directory: .circleci/simple-maven-package-test/maven-package-test

workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - test-set_env_vars_for_maven:
          context: circleci-orb-publishing
          filters: *filters
      - test-configure_maven_install_package:
          context: circleci-orb-publishing
          filters: *filters
      - test-upload_package_using_cli:
          context: circleci-orb-publishing
          filters: *filters
      - test-upload_package_native:
          context: circleci-orb-publishing
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: ft-circleci-orbs/cloudsmith-maven
          vcs_type: << pipeline.project.type >>
          pub_type: dev
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - test-set_env_vars_for_maven
            - test-configure_maven_install_package
            - test-upload_package_using_cli
            - test-upload_package_native
          # Use a context to hold your publishing token.
          context: circleci-orb-publishing
          filters: *release-filters
